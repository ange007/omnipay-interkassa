<?php

/**
 * InterKassa driver for the Omnipay PHP payment processing library
 *
 * @link      https://github.com/ange007/omnipay-interkassa
 * @package   omnipay-interkassa
 * @license   MIT
 * @copyright Copyright (c) 2017, ange007 ( original author: HiQDev - http://hiqdev.com/ )
 */

namespace Omnipay\InterKassa\Message;

/**
 * InterKassa Abstract Response.
 */
abstract class AbstractResponse extends \Omnipay\Common\Message\AbstractResponse
{
	/**
	 * {@inheritdoc}
	 * @var AbstractRequest
	 */
	public $request;

	/**
	 * The checkout ID.
	 *
	 * @return string
	 */
	public function getCheckoutId( )
	{
		return isset( $this->data[ 'ik_co_id' ] ) ? $this->data[ 'ik_co_id' ] : null;
	}

	/**
	 * The transaction identifier generated by the merchant website.
	 *
	 * @return string
	 */
	public function getTransactionId( )
	{
		return isset( $this->data[ 'ik_pm_no' ] ) ? $this->data[ 'ik_pm_no' ] : null;
	}
	
	/**
	 * The state of the payment.
	 * Possible results:
	 *  - `new`: newly created payment
	 *  - `waitAccept`: waits for the payment
	 *  - `process`: the payment is being processed
	 *  - `success`: the payment processed successfully
	 *  - `canceled`: the payment have been canceled
	 *  - `fail`: the payment failed.
	 *
	 * @return string
	 * @see isSuccessful
	 */
	public function getTransactionStatus( )
	{
		return isset( $this->data[ 'ik_inv_st' ] ) ? $this->data[ 'ik_inv_st' ] : null;
	}

	/**
	 * {@inheritdoc}
	 */
	public function getTransactionReference( )
	{
		return isset( $this->data[ 'ik_inv_id' ] ) ? $this->data[ 'ik_inv_id' ] : null;
	}

	/**
	 * The amount of payment.
	 *
	 * @return mixed
	 */
	public function getAmount( )
	{
		return isset( $this->data[ 'ik_am' ] ) ? $this->data[ 'ik_am' ] : null;
	}

	/**
	 * The currency of the payment.
	 * @return string
	 */
	public function getCurrency( )
	{
		return isset( $this->data[ 'ik_cur' ] ) ? $this->data[ 'ik_cur' ] : null;
	}

	/**
	 * The time of request processing.
	 *
	 * @return string
	 */
	public function getTime( )
	{
		$requestDate = isset( $this->data[ 'ik_inv_prc' ] ) ? $this->data[ 'ik_inv_prc' ] : null;

		return ( new \DateTime( $requestDate, new \DateTimeZone( 'Europe/Moscow' ) ) )->format( 'c' );
	}

	/**
	 * @return string the payment method inside a gateway (Visa, WebMoney, etc)
	 */
	public function getPayer( )
	{
		return isset( $this->data[ 'ik_pw_via' ] ) ? $this->data[ 'ik_pw_via' ] : null;
	}
}